{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "principalId": {
            "type": "string"
        },
        "roleDefinitionId": {
            "type": "string"
        },
        "deniedLocation": {
            "type": "string"
        },
        "mgmtRgLocation": {
            "type": "string"
        },
        "mgmtRgName": {
            "type": "string"
        },
        "securitySettings": {
            "type": "string",
            "allowedValues": [
                "On",
                "Off"
            ]
        },
        "subscriptionAdminEmail": {
            "type": "string",
            "defaultValue": "john@doe.com"
        }
    },
    "variables": {
        "omsWorkspaceName": "[concat(uniqueString(deployment().name), 'ws20')]",
        "omsAutomationAccountName": "[concat(uniqueString(deployment().name), 'aa20')]",
        "omsPolicyGuid": "0868462e-646c-4fe3-9ced-a733534b6a2c",
        "omsTemplateUri": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/omsWorkspace.json')]",
        "ascTemplateUri": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/ascWithOmsConfig.json')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "ascConfig",
            "location": "[parameters('mgmtRgLocation')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ascTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "securitySettings": {
                        "value": "[parameters('principalId')]"
                    },
                    "emailContact": {
                        "value": "[parameters('subscriptionAdminEmail')]"
                    },
                    "workspaceSubscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "workspaceResourceGroup": {
                        "value": "[parameters('mgmtRgName')]"
                    },
                    "workspaceName": {
                        "value": "[variables('omsWorkspaceName')]"
                    }
                }
            }
        }
        {
            "type": "Microsoft.Authorization/policyDefinitions",
            "name": "locationDef01",
            "apiVersion": "2018-03-01",
            "properties": {
                "policyType": "Custom",
                "mode": "All",
                "parameters": {},
                "policyRule": {
                    "if": {
                        "field": "location",
                        "equals": "[parameters('deniedLocation')]"
                    },
                    "then": {
                        "effect": "deny"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "byTemplate-location-lock",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyDefinitions/', 'locationDef01')]"
            ],
            "properties": {
                "scope": "[subscription().id]",
                "policyDefinitionId": "[resourceId('Microsoft.Authorization/policyDefinitions', 'locationDef01')]"
            }
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('mgmtRgLocation')]",
            "name": "[parameters('mgmtRgName')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "workspaceDeployment",
            "resourceGroup": "[parameters('mgmtRgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('mgmtRgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[variables('omsTemplateUri')]"
                },
                "parameters": {
                    "omsWorkspaceName": {
                        "value": "[variables('omsWorkspaceName')]"
                    },
                    "omsWorkspaceRegion": {
                        "value": "[parameters('mgmtRgLocation')]"
                    },
                    "omsAutomationAccountName": {
                        "value": "[variables('omsAutomationAccountName')]"
                    },
                    "omsAutomationRegion": {
                        "value": "eastus2"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "name": "omsDefault",
            "apiVersion": "2018-03-01",
            "dependsOn": [
                "workspaceDeployment"
            ],
            "properties": {
                "scope": "[subscription().id]",
                "policyDefinitionId": "[concat('providers/Microsoft.Authorization/policyDefinitions/', variables('omspolicyGuid'))]",
                "parameters": {
                    "logAnalytics": {
                        "value": "[concat(subscription().subscriptionId, '/resourceGroups/', parameters('mgmtRgName'), '/providers/Microsoft.OperationalInsights/workspaces/', variables('omsWorkspaceName'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[parameters('principalId')]",
            "apiVersion": "2017-05-01",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]",
                "principalId": "[parameters('principalId')]",
                "scope": "[subscription().id]"
            }
        }
    ]
}